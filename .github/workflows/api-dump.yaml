name: API Dump

on:
  # Trigger on pushes to main and develop branches
  push:
    branches:
      - main
      - master
    paths:
      - 'src/**/*.kt'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
  
  # Trigger on pull requests
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'src/**/*.kt'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
  
  # Allow manual trigger
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  api-dump:
    runs-on: macos-latest # macOS supports all KMP targets
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Use a PAT or default token with write permissions
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # Full history for better commit messages

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 19

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Xcode (for iOS/macOS targets)
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: 'latest-stable'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Konan
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/cache
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
            ~/.konan/kotlin-native-prebuilt-macos*
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Run API Dump
        run: ./gradlew apiDump --stacktrace

      - name: Check for API changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain api/) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "✅ API changes detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No API changes detected"
          fi

      - name: Display API changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo "📝 API Changes:"
          git diff --stat api/
          echo ""
          echo "📄 Detailed diff:"
          git diff api/

      # Option 1: Direct commit to the branch (for push to main/develop)
      - name: Commit and push changes
        if: |
          steps.check_changes.outputs.changes == 'true' && 
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add api/
          git commit -m "Update API dump [skip ci]

          Generated by: ${{ github.workflow }} workflow
          Triggered by: ${{ github.actor }}
          Commit: ${{ github.sha }}"
          git push

      # Option 2: Create a Pull Request (for pull_request events or manual trigger)
      - name: Create Pull Request
        if: |
          steps.check_changes.outputs.changes == 'true' && 
          github.event_name != 'push'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Update API dump
            
            Generated by: ${{ github.workflow }} workflow
            Triggered by: ${{ github.actor }}
            Source: ${{ github.event_name }}
          branch: api-dump/${{ github.run_number }}
          delete-branch: true
          title: '🔄 Update API Dump'
          body: |
            ## 📋 API Dump Update
            
            This PR contains automated API dump updates generated by the API Dump workflow.
            
            ### 📊 Details
            - **Workflow Run:** [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - **Triggered by:** ${{ github.actor }}
            - **Event:** ${{ github.event_name }}
            - **Commit:** ${{ github.sha }}
            
            ### ⚠️ Review Required
            Please review the API changes carefully before merging.
            
            - [ ] API changes are intentional
            - [ ] Breaking changes are documented
            - [ ] Version should be bumped accordingly
            
            ---
            *This PR was automatically generated by GitHub Actions*
          labels: |
            api-dump
            automated
          assignees: ${{ github.actor }}

      - name: Summary
        if: always()
        run: |
          echo "## 📊 API Dump Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Detected:** ${{ steps.check_changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.check_changes.outputs.changes }}" == "true" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📝 Changed Files" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            git status --short api/ >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
